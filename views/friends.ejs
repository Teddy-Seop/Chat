<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
    <style>
        #header{
            border: 1px solid black;
        }
        #contents{
            border: 1px solid black;
            float: left;
            width: 100%;
        }
        .users{
            border: 1px solid black;
            float: left;
            width: 65%;
        }
        .menu{
            float: left;
            padding: 10px;
            margin: 10px;
            border: 1px solid black;
        }
        #btn{
            float:right;
        }
        #menu{
            border-bottom: 1px solid black;
        }
        #receiveMenu, #listMenu{
            float:left;
            width:40%;
            border: 1px solid black;
            padding: 10px;
            margin: 10px;
        }
    </style>
</head>
<body>
    <div id="header">
        <div id="roomMenu" class="menu" onclick="roomMenu()">
            Rooms
        </div>
        <div id="userMenu" class="menu" onclick="userMenu()">
            Users
        </div>
        <div id="friendsMenu" class="menu" onclick="friendsMenu()">
            Friends
        </div>
        <div id="logout" class="menu" onclick="logout()">
            logout
        </div>
    </div>
    <div id="contents">
        <div id="menu">
            <div id="receiveMenu" onclick="friendingList()">친구 요청 수신함</div>
            <div id="listMenu" onclick="list()">친구 목록</div>
        </div>
        <div id="list"></div>
    </div>
</body>
</html>

<script src="https://code.jquery.com/jquery-3.5.1.js" 
integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" 
crossorigin="anonymous"></script>
<script src="/js/frontUtil.js"></script>
<script>
    window.onload = async () => {
        await friendingList();
    }

    // 친구 요청 목록 조회
    let friendingList = async () => {
        let friending = `<%- friending %>`;
        friending = JSON.parse(friending);
        document.querySelector('#list').innerHTML = "";
        for(let i=0; i<friending.length; i++){
            let userInfo = await AjaxUtil('/user/user', 'GET', {no: friending[i].userNo});
            let html = `<div class="users ${friending[i].friendsNo}">ID: ${userInfo.id}  가입날짜: ${formatDate(userInfo.createdAt)}`;
            html += `<div id="btn"><button class="accept" onclick="accept(${friending[i].friendsNo})">수락</button>`;
            html += `<button class="reject" onclick="reject(${friending[i].friendsNo})">거절</button></div>`;
            html += `</div>`;
            $('#list').append(html);
        }
    }

    // 친구 목록 조회
    let list = async () => {
        let friends = `<%- friends %>`;
        friends = JSON.parse(friends);
        document.querySelector('#list').innerHTML = "";
        for(let i=0; i<friends.length; i++){
            let userInfo = await AjaxUtil('/user/user', 'GET', {no: friends[i].userNo});
            let html = `<div class="users ${friends[i].no}">ID: ${userInfo.id}  가입날짜: ${formatDate(userInfo.createdAt)}</div>`;
            $('#list').append(html);
        }
    }

    //친구 신청 수락
    let accept = async (friendsNo) => {
        let user = JSON.parse(`<%- user %>`);
        let data = {
            userNo: user.no,
            friendsNo: friendsNo
        }
        await AjaxUtil('/user/friends/accept', 'POST', data);
        location.href = location.href;
    }

    //친구 신청 거절
    let reject = async (friendsNo) => {
        let user = JSON.parse(`<%- user %>`);
        let data = {
            userNo: user.no,
            friendsNo: friendsNo
        }
        await AjaxUtil('/user/friends/reject', 'DELETE', data);
        location.href = location.href;
    }

    //친구 삭제
    let del = (friendsNo) => {
        let user = parseInt(`<%- user %>`);
        let data = {
            userNo: user.no,
            friendsNo: friendsNo
        }
        $.ajax({
            url: '/user/friends/delete',
            dataType: 'json',
            type: 'POST',
            data: data,
            success: (result) => {
                location.href = location.href;
            }
        })
    }

    //DM
    let dm = (friendsNo) => {
        let user = parseInt(`<%- user %>`);
        let userNo = user.userNo;
        location.href = `/dm/${uno}/${friendsNo}`;
    }

    //날자 형식 변환
    let formatDate = (date) => {
        let d = new Date(date);
        let year = d.getFullYear();
        let month = '' + (d.getMonth() + 1);
        let day = '' + d.getDate();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [year, month, day].join('-');
    }

    //메뉴 이동
    let roomMenu = () => {
        location.href = '/rooms';
    }
    let userMenu = () => {
        location.href = '/users';
    }
    let friendsMenu = () => {
        location.href = '/friends';
    }
    let logout = () => {
        location.href = '/user/logout';
    }
</script>